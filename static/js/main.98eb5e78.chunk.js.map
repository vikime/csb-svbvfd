{"version":3,"sources":["App.js","index.js","Calculator.js"],"names":["App","className","Calculator","rootElement","document","getElementById","createRoot","render","useState","calculation","setcalculation","finalResult","setFinalResult","operation","generateValue","value","includes","slice","concat","eval","toString","addDigits","digit","i","push","onClick","calculate","deleteLastVal"],"mappings":"mKAGe,SAASA,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,cAACC,EAAA,EAAD,MCDN,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACP,EAAD,Q,mnBCRJ,SAASE,aACP,cAAsCM,oDAAS,IAA/C,gNAAOC,YAAP,cAAoBC,eAApB,cACA,WAAsCF,oDAAS,IAA/C,iNAAOG,YAAP,cAAoBC,eAApB,cAEMC,UAAY,CAAC,IAAK,IAAK,IAAK,IAAK,KAEjCC,cAAgB,SAAhBA,cAAiBC,OAElBF,UAAUG,SAASD,QAA0B,KAAhBN,aAC7BI,UAAUG,SAASD,QAAUF,UAAUG,SAASP,YAAYQ,OAAO,MAItEP,eAAeD,YAAYS,OAAOH,QAE7BF,UAAUG,SAASD,QACtBH,eAAeO,KAAKV,YAAcM,OAAOK,cAIvCC,UAAY,WAEhB,IADA,IAAMC,EAAQ,GADQ,WAEbC,GACPD,EAAME,KACJ,qEAAgBC,QAAS,kBAAMX,cAAcS,EAAEH,aAA/C,SACGG,GADUA,KAFRA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAOT,OAAOD,GAGHI,UAAY,SAAZA,UAAaX,OACjBL,eAAeS,KAAKV,aAAaW,aAG7BO,cAAgB,WACpB,GAAoB,KAAhBlB,YAAJ,CAIA,IAAMM,EAAQN,YAAYQ,MAAM,GAAI,GAEpCP,eAAeK,KAGjB,OACE,mEAAKd,UAAU,QAAf,UACE,mEAAKA,UAAU,UAAf,UACGU,YAAc,mFAASA,YAAT,OAAgC,IADjD,IACuDF,aAAe,OAEtE,mEAAKR,UAAU,WAAf,UACE,qEAAQwB,QAAS,kBAAMX,cAAc,MAArC,eACA,qEAAQW,QAAS,kBAAMX,cAAc,MAArC,eACA,qEAAQW,QAAS,kBAAMX,cAAc,MAArC,eACA,qEAAQW,QAAS,kBAAMX,cAAc,MAArC,eACA,qEAAQW,QAASE,cAAjB,uBAEF,mEAAK1B,UAAU,SAAf,UACGoB,YACD,qEAAQI,QAAS,kBAAMX,cAAc,MAArC,eACA,qEAAQW,QAAS,kBAAMX,cAAc,MAArC,eAEA,qEAAQW,QAASC,UAAjB,qBAMOxB,mC","file":"static/js/main.98eb5e78.chunk.js","sourcesContent":["import Calculator from \"./Calculator\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n","import React, { useState } from \"react\";\r\n\r\nfunction Calculator() {\r\n  const [calculation, setcalculation] = useState(\"\");\r\n  const [finalResult, setFinalResult] = useState(\"\");\r\n\r\n  const operation = [\"/\", \"*\", \"-\", \"+\", \".\"];\r\n\r\n  const generateValue = (value) => {\r\n    if (\r\n      (operation.includes(value) && calculation === \"\") ||\r\n      (operation.includes(value) && operation.includes(calculation.slice(-1)))\r\n    ) {\r\n      return;\r\n    }\r\n    setcalculation(calculation.concat(value));\r\n\r\n    if (!operation.includes(value)) {\r\n      setFinalResult(eval(calculation + value).toString());\r\n    }\r\n  };\r\n\r\n  const addDigits = () => {\r\n    const digit = [];\r\n    for (let i = 1; i < 10; i++) {\r\n      digit.push(\r\n        <button key={i} onClick={() => generateValue(i.toString())}>\r\n          {i}\r\n        </button>\r\n      );\r\n    }\r\n    return digit;\r\n  };\r\n\r\n  const calculate = (value) => {\r\n    setcalculation(eval(calculation).toString());\r\n  };\r\n\r\n  const deleteLastVal = () => {\r\n    if (calculation === \"\") {\r\n      return;\r\n    }\r\n\r\n    const value = calculation.slice(0, -1);\r\n\r\n    setcalculation(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"calci\">\r\n      <div className=\"display\">\r\n        {finalResult ? <span> ({finalResult})</span> : \" \"} {calculation || \"0\"}\r\n      </div>\r\n      <div className=\"operator\">\r\n        <button onClick={() => generateValue(\"+\")}>+</button>\r\n        <button onClick={() => generateValue(\"-\")}>-</button>\r\n        <button onClick={() => generateValue(\"*\")}>*</button>\r\n        <button onClick={() => generateValue(\"/\")}>/</button>\r\n        <button onClick={deleteLastVal}>del/CE</button>\r\n      </div>\r\n      <div className=\"digits\">\r\n        {addDigits()}\r\n        <button onClick={() => generateValue(\"0\")}>0</button>\r\n        <button onClick={() => generateValue(\".\")}>.</button>\r\n\r\n        <button onClick={calculate}>=</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n"],"sourceRoot":""}